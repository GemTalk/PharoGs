ifErr 1 stk
ifErr 2 stack
ifErr 3 abort
ifErr 4 exit
run
| symbolList |
symbolList := (Globals at: #System) myUserProfile symbolList.
(symbolList objectNamed: #'Pharo') ifNil: [
	symbolList
		createDictionaryNamed: #'Pools' at: 0;
		createDictionaryNamed: #'Pharo' at: 0;
		yourself.
	System refreshTransientSymbolList.
].
%
run
UserGlobals 
	at: #'thisContext' ifAbsentPut: [nil];	"allow methods to compile; may need to fix this!"
	yourself.
%
errorCount
commit
logout
login
input PharoGs.tpz
! return from PharoGs.tpz
input importGsEdits.tpz
! return from importGsEdits.out
errorCount

run
Object superclassForEnv: 2 put: ProtoObject.
Object class superclassForEnv: 2 put: ProtoObject class.
Array superclassForEnv: 2 put: ArrayedCollection.
Array class superclassForEnv: 2 put: ArrayedCollection class.
ByteArray superclassForEnv: 2 put: ArrayedCollection.
ByteArray class superclassForEnv: 2 put: ArrayedCollection class.
ScaledDecimal superclassForEnv: 2 put: Fraction.
ScaledDecimal class superclassForEnv: 2 put: Fraction class.
SmallFloat64 superclassForEnv: 2 put: Float.
SmallFloat64 class superclassForEnv: 2 put: Float class.
SmalltalkImage superclassForEnv: 2 put: IdentityDictionary.
SmalltalkImage class superclassForEnv: 2 put: IdentityDictionary class.
String superclassForEnv: 2 put: ArrayedCollection.
String class superclassForEnv: 2 put: ArrayedCollection class.
true
%
errorCount
set compile_env: 0
run
"Create Smalltalk, an instance of SystemDictionary"
| systemDictionary |
Pharo
	at: #'Undeclared' put: Dictionary @env2:new;
	yourself.
systemDictionary := SystemDictionary @env2:new.
Pharo keysAndValuesDo: [:eachKey :eachValue | 
	eachKey ~~ #'Pharo' ifTrue: [
		systemDictionary @env2:at: eachKey put: eachValue.
	].
].
(Smalltalk := SmalltalkImage basicNew)
	@env2:globals: systemDictionary;
	@env2:specialObjectsArray: Smalltalk @env2:newSpecialObjectsArray;
	yourself.
%
run
"Add SharedPool class variables to a new SymbolDictionary so Jade shows them"
SharedPool allSubclasses do: [:each |
	Pools at: each name put: each _classVars.
].
true
%
errorCount

set compile_env: 2
run
"Class and Pool initialization"
ChronologyConstants initialize.
DateAndTime initialize.
Color initialize.
HashTableSizes initialize.
Character initialize.
String initialize.
Float initialize.
File initialize.
OSPlatform initialize.
Base64MimeConverter initialize.
ZnBase64Encoder initialize.
ISO88592TextConverter initialize.
SharedPool allSubclasses do: [:each | each initialize].
true
%
commit

run
FloatTest suite run printString.
%
run
FractionTest suite run printString.
%
run
IntegerDigitLogicTest suite run printString.
%
run
IntegerTest suite run printString.
%
run
NumberTest suite run printString.
%
run
ScaledDecimalTest suite run printString.
%
run
SmallIntegerTest suite run printString.
%

run
BooleanTest suite run printString.
%
run
FalseTest suite run printString.
%
run
TrueTest suite run printString.
%
run
UndefinedObjectTest suite run printString.
%

run
"expect two failures"
FileTest suite run printString.
%

run
Base64MimeConverterTest suite run printString.
%
run
Base64Tests suite run printString.
%

logout
! successful import of Pharo into GemStone!
exit
